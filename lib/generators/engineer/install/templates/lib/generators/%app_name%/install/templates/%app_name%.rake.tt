namespace "<%= app_name %>" do

  desc "Update <%= app_name %>'s static assets and migrations"
  task :update => [:assets, "db:migrate"]

  namespace :db do<%# TODO: not everyone uses active record. %>

    desc "Load <%= app_name %>'s seed data"
    task :seed => :environment do
      seed_file = File.join(<%= app_module %>::Engine.root, 'db', 'seeds.rb')
      load(seed_file) if File.exist?(seed_file)
    end

    desc "Copy new <%= app_name %> migrations for use"<%# TODO: this stinks, I want thor.  Be a generator? %>
    task :migrate do
      require 'rails/generators/active_record'
      mkdir_p 'db/migrate' unless File.exists? 'db/migrate'

      Dir["#{<%= app_module %>::Engine.root}/db/migrate/[0-9]*_*.rb"].sort.each do |original_migration|
        original_migration_name = File.basename(original_migration).match(/\d+_(.*)\.rb/)[1]
        copied_migration_name = "<%= app_name %>_#{original_migration_name}"

        next unless Dir["db/migrate/[0-9]*_#{copied_migration_name}.rb"].empty?

        migration_number = ActiveRecord::Generators::Base.next_migration_number('db/migrate')
        copied_migration = "db/migrate/#{migration_number}_#{copied_migration_name}.rb"

        puts copied_migration

        migration_source = File.read(original_migration)
        migration_source.gsub! "class #{original_migration_name.camelize}", "class #{copied_migration_name.camelize}"
        File.open(copied_migration, "w") { |f| f << migration_source }

        # TODO: This is unnecessary once https://rails.lighthouseapp.com/projects/8994-ruby-on-rails/tickets/4412 gets in
        sleep 1 # wait for timestamp to change.
      end
    end

  end

  desc "Sync <%= app_name %>'s static assets (pass false to just copy)"
  task :assets, [:sync] => :environment do |t, args|
    args.with_defaults :sync => true
    engine_asset_path = File.join(Rails.application.paths.public.to_a.first, "<%= app_name %>") # TODO: engine config?
    rm_rf engine_asset_path if args[:sync]
    cp_r engine_asset_path, Rails.application.paths.public.to_a.first
  end

end

task "db:seed" => "<%= app_name %>:db:seed"
